{% schema %}
    {
      "name": "Color Slider",
      "settings": [
        {
          "type": "range",
          "id": "padding_top_desktop",
          "min": 0,
          "max": 100,
          "step": 4,
          "unit": "px",
          "label": "Padding Top Desktop",
          "default": 36
        },
        {
          "type": "range",
          "id": "padding_bottom_desktop",
          "min": 0,
          "max": 100,
          "step": 4,
          "unit": "px",
          "label": "Padding Bottom Desktop",
          "default": 36
        },
        {
          "type": "range",
          "id": "padding_top_mobile",
          "min": 0,
          "max": 60,
          "step": 4,
          "unit": "px",
          "label": "Padding Top Mobile",
          "default": 24
        },
        {
          "type": "range",
          "id": "padding_bottom_mobile",
          "min": 0,
          "max": 60,
          "step": 4,
          "unit": "px",
          "label": "Padding Bottom Mobile",
          "default": 24
        }
      ],
      "blocks": [
        {
          "type": "slide",
          "name": "Slide",
          "settings": [
            {
              "type": "image_picker",
              "id": "image",
              "label": "Image"
            },
            {
              "type": "url",
              "id": "link",
              "label": "Link"
            },
            {
              "type": "text",
              "id": "title",
              "label": "Title",
              "default": "Slide Title"
            }
          ]
        }
      ],
      "presets": [
        {
          "name": "Color Slider",
          "blocks": [
            {
              "type": "slide"
            }
          ]
        }
      ]
    }
    {% endschema %}
    
    <style>
    .color-slider {
      position: relative;
      width: 100%;
      overflow: hidden;
    }
    
    .color-slider__track {
      display: flex;
      transition: transform 0.3s ease-in-out;
    }
    
    .color-slider__slide {
      flex: 0 0 auto;
      width: calc(100% / 6);
      padding: 0 10px;
      text-align: center;
    }
    
    @media screen and (max-width: 480px) {
      .color-slider__slide {
        width: calc(100% / 3);
      }
    }
    
    .color-slider__image {
      width: 100%;
      height: auto;
      margin-bottom: 10px;
    }
    
    .color-slider__title {
      font-size: 14px;
      text-transform: uppercase;
      margin-top: 10px;
    }
    
    .color-slider__nav {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      width: 40px;
      height: 40px;
      background: white;
      border: 1px solid #ddd;
      border-radius: 50%;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 2;
    }
    
    .color-slider__prev {
      left: 10px;
    }
    
    .color-slider__next {
      right: 10px;
    }
    </style>
    
    <div class="color-slider" 
      style="padding-top: {{ section.settings.padding_top_desktop }}px; padding-bottom: {{ section.settings.padding_bottom_desktop }}px;"
      data-mobile-padding-top="{{ section.settings.padding_top_mobile }}"
      data-mobile-padding-bottom="{{ section.settings.padding_bottom_mobile }}">
      
      <button class="color-slider__nav color-slider__prev" aria-label="Previous">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M15 18l-6-6 6-6"/>
        </svg>
      </button>
    
      <div class="color-slider__track">
        {% for block in section.blocks %}
          <div class="color-slider__slide" {{ block.shopify_attributes }}>
            {% if block.settings.link != blank %}
              <a href="{{ block.settings.link }}">
            {% endif %}
              {% if block.settings.image != blank %}
                <img 
                  class="color-slider__image"
                  src="{{ block.settings.image | img_url: '400x' }}"
                  alt="{{ block.settings.title }}"
                  loading="lazy"
                  width="400"
                  height="400"
                >
              {% endif %}
              {% if block.settings.title != blank %}
                <div class="color-slider__title">{{ block.settings.title }}</div>
              {% endif %}
            {% if block.settings.link != blank %}
              </a>
            {% endif %}
          </div>
        {% endfor %}
      </div>
    
      <button class="color-slider__nav color-slider__next" aria-label="Next">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M9 18l6-6-6-6"/>
        </svg>
      </button>
    </div>
    
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      const sliders = document.querySelectorAll('.color-slider');
      
      sliders.forEach(slider => {
        const track = slider.querySelector('.color-slider__track');
        const slides = slider.querySelectorAll('.color-slider__slide');
        const prevBtn = slider.querySelector('.color-slider__prev');
        const nextBtn = slider.querySelector('.color-slider__next');
        let currentIndex = 0;
        
        function updateSliderPadding() {
          if (window.innerWidth <= 480) {
            slider.style.paddingTop = `${slider.dataset.mobilePaddingTop}px`;
            slider.style.paddingBottom = `${slider.dataset.mobilePaddingBottom}px`;
          } else {
            slider.style.paddingTop = `${slider.dataset.desktopPaddingTop}px`;
            slider.style.paddingBottom = `${slider.dataset.desktopPaddingBottom}px`;
          }
        }
    
        function updateSlidePosition() {
          const slideWidth = slides[0].offsetWidth;
          track.style.transform = `translateX(-${currentIndex * slideWidth}px)`;
        }
    
        prevBtn.addEventListener('click', () => {
          if (currentIndex > 0) {
            currentIndex--;
            updateSlidePosition();
          }
        });
    
        nextBtn.addEventListener('click', () => {
          const maxIndex = window.innerWidth <= 480 ? 
            slides.length - 3 : // Show 3 slides on mobile
            slides.length - 6;  // Show 6 slides on desktop
          
          if (currentIndex < maxIndex) {
            currentIndex++;
            updateSlidePosition();
          }
        });
    
        // Update padding on resize
        window.addEventListener('resize', updateSliderPadding);
        
        // Initial setup
        updateSliderPadding();
      });
    });
    </script>